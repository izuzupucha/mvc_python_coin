import streamlit as st
from view.profile_view import ProfileView
from view.admin_view import AdminView
from view.rsi_view import RSIView
from view.ema_view import EMAView
from view.macd_view import MACDView
from view.ic_view import ICView
from view.psar_view import PSARView
from view.adx_view import ADXView
from view.bb_view import BBView
from view.obv_view import OBVView
from view.kdj_view import KDJView
from config import constants as cons

class MenuView:
    @staticmethod
    def show_main_menu(controller, user_controller, user):
        # Kh·ªüi t·∫°o bi·∫øn ƒëi·ªÅu h∆∞·ªõng
        if "page" not in st.session_state:
            st.session_state.page = "home"

        # === PAGE 1: TRANG CH·ª¶ ===
        if st.session_state.page == "home":
            st.markdown(
                f"<p style='font-size:16px; font-weight:600; color:#333;'>üíπ Ch√†o m·ª´ng <span style='color:#0078ff'>{user.get('email')}</span>!</p>",
                unsafe_allow_html=True
            )
            # --- CSS T√πy ch·ªânh ƒë·ªÉ cƒÉn n√∫t v√† b·ªë c·ª•c ƒë·∫πp h∆°n ---
            # --- CSS ƒë·ªÉ l√†m n√∫t c√≥ k√≠ch th∆∞·ªõc ƒë·ªìng ƒë·ªÅu v√† b·ªë c·ª•c ƒë·∫πp ---
            st.markdown("""
                <style>
                    /* To√†n b·ªô n√∫t c√≥ c√πng k√≠ch th∆∞·ªõc */
                    .stButton > button {
                        width: 100% !important;
                        height: 18px !important;
                        background-color: #f8f9fa;
                        color: #333;
                        border: 1px solid #ddd;
                        border-radius: 8px;
                        font-weight: 600;
                        font-size: 14px;
                        transition: all 0.2s ease-in-out;
                    }

                    /* Hover ƒë·∫πp */
                    .stButton > button:hover {
                        background-color: #0078ff !important;
                        color: white !important;
                        border-color: #0078ff;
                        transform: scale(1.03);
                    }

                    /* C√°c c·ªôt c√≥ kho·∫£ng c√°ch ƒë·ªÅu */
                    div[data-testid="column"] {
                        padding-right: 8px !important;
                        padding-left: 8px !important;
                    }

                    /* Kho·∫£ng c√°ch gi·ªØa c√°c nh√≥m */
                    h3, .stSubheader {
                        margin-top: 25px !important;
                        margin-bottom: 12px !important;
                    }

                    /* G·∫°ch ph√¢n c√°ch */
                    hr {
                        margin-top: 30px !important;
                        margin-bottom: 30px !important;
                        border-color: #ccc !important;
                    }
                    div[data-testid="stMarkdownContainer"] h3 {
                        font-size: 14px !important;
                        font-weight: 600 !important;
                        color: #444 !important;
                        margin-top: 16px !important;
                        margin-bottom: 8px !important;
                    }
                </style>
            """, unsafe_allow_html=True)
            # --- Nh√≥m ch·ªâ b√°o xu h∆∞·ªõng ---
            st.subheader("1. Nh√≥m ch·ªâ b√°o xu h∆∞·ªõng")
            cols = st.columns(5)
            buttons = {
                cons.EMA: cols[0].button("Ch·ªâ b√°o EMA"),
                cons.MACD: cols[1].button("Ch·ªâ b√°o MACD"),
                cons.IC: cols[2].button("Ichimoku"),
                cons.PSAR: cols[3].button("Parabolic SAR"),
                cons.ADX: cols[4].button("Ch·ªâ b√°o ADX")
            }
            
            # --- Nh√≥m ch·ªâ b√°o ph·ª• tr·ª£ x√°c nh·∫≠n xu h∆∞·ªõng---
            st.subheader("2. Nh√≥m ch·ªâ b√°o ph·ª• tr·ª£ x√°c nh·∫≠n xu h∆∞·ªõng")
            cols = st.columns(4)
            buttons.update({
                cons.RSI: cols[0].button("Ch·ªâ b√°o RSI"),
                cons.BB: cols[1].button("Bollinger Bands"),
                cons.OBV: cols[2].button("Volume + OBV"),
                cons.KDJ: cols[3].button("Ch·ªâ b√°o KDJ"),
            })
            
            # --- Combo nh√≥m ch·ªâ b√°o x√°c nh·∫≠n xu h∆∞·ªõng---
            st.subheader("3. Combo ch·ªâ b√°o x√°c nh·∫≠n xu h∆∞·ªõng")
            cols = st.columns(2)
            buttons.update({
                cons.EMA_MACD_RSI: cols[0].button("Combo EMA - MACD - RSI"),
                cons.EMA_20_50_MACD: cols[1].button("Combo EMA 20/50 - MACD"),
            })
            # --- Combo nh√≥m ch·ªâ b√°o ph√°t hi·ªán ƒë·∫£o chi·ªÅu ---
            st.subheader("4. Combo nh√≥m ch·ªâ b√°o ph√°t hi·ªán ƒë·∫£o chi·ªÅu")
            cols = st.columns(2)
            buttons.update({
                cons.RSI_MACD: cols[0].button("Combo RSI - MACD"),
                cons.MACD_SAR_ADX: cols[1].button("Combo MACD - SAR - ADX"),
            })
            # --- Combo nh√≥m ch·ªâ b√°o Scalping nhanh ---
            st.subheader("5. Combo nh√≥m ch·ªâ b√°o Scalping nhanh")
            cols = st.columns(2)
            buttons.update({
                cons.EMA_SAR: cols[0].button("Combo EMA 9/21 - SAR"),
                cons.RSI_Stoch_VWAP: cols[1].button("Combo RSI - Stoch - VWAP"),
            })                             

            # Khi b·∫•m chi·∫øn l∆∞·ª£c, chuy·ªÉn trang
            for key, clicked in buttons.items():
                if clicked:
                    st.session_state.page = key
                    st.rerun()
            st.markdown("---")

            # --- H√†ng n√∫t ch·ª©c nƒÉng cu·ªëi trang ---
            st.subheader("‚öôÔ∏è T√πy ch·ªçn")
            cols3 = st.columns(3 if user.get("role") == "admin" else 2)

            if cols3[0].button("üë§ Th√¥ng tin c√° nh√¢n"):
                st.session_state.page = "profile"
                st.rerun()

            if user.get("role") == "admin":
                if cols3[1].button("üëë Qu·∫£n tr·ªã ng∆∞·ªùi d√πng"):
                    st.session_state.page = "admin"
                    st.rerun()
                logout_col = cols3[2]
            else:
                logout_col = cols3[1]

            if logout_col.button("üö™ ƒêƒÉng xu·∫•t"):
                st.session_state.pop("user", None)
                st.session_state.page = "home"
                st.success("ƒê√£ ƒëƒÉng xu·∫•t!")
                st.rerun()
        else:
            # === PAGE 2: RSI ===
            # N√∫t quay l·∫°i ƒë·∫ßu trang
            if st.button("üîô Quay l·∫°i Trang ch·ªß", key = "top"):
                MenuView.go_home()
                
            elif st.session_state.page == cons.EMA:
                EMAView.show(controller)
                
            elif st.session_state.page == cons.MACD:
                MACDView.show(controller)
                
            elif st.session_state.page == cons.IC:
                ICView.show(controller)
                
            elif st.session_state.page == cons.PSAR:
                PSARView.show(controller)
                
            elif st.session_state.page == cons.ADX:
                ADXView.show(controller)
                
            elif st.session_state.page == cons.RSI:
                RSIView.show(controller)
                
            elif st.session_state.page == cons.BB:
                BBView.show(controller)
                
            elif st.session_state.page == cons.OBV:
                OBVView.show(controller)
                
            elif st.session_state.page == cons.KDJ:
                KDJView.show(controller)
                
            elif st.session_state.page == cons.EMA_MACD_RSI:
                st.header("üìä EMA_MACD_RSI Indicator")
                controller.handle_strategy(cons.EMA_MACD_RSI, None, None)
                
            elif st.session_state.page == cons.EMA_20_50_MACD:
                st.header("üìä EMA_20_50_MACD Indicator")
                controller.handle_strategy(cons.EMA_20_50_MACD, None, None)
                
            elif st.session_state.page == cons.RSI_MACD:
                st.header("üìä RSI_MACD Indicator")
                controller.handle_strategy(cons.RSI_MACD, None, None)
                
            elif st.session_state.page == cons.MACD_SAR_ADX:
                st.header("üìä MACD_SAR_ADX Indicator")
                controller.handle_strategy(cons.MACD_SAR_ADX, None, None)
                
            elif st.session_state.page == cons.EMA_SAR:
                st.header("üìä EMA_SAR Indicator")
                controller.handle_strategy(cons.EMA_SAR, None, None)
                
            elif st.session_state.page == cons.RSI_Stoch_VWAP: 
                st.header("üìä RSI_Stoch_VWAP Indicator")
                controller.handle_strategy(cons.RSI_Stoch_VWAP, None, None)
                
            
            elif st.session_state.page == "profile":
                ProfileView.show_profile(user_controller, user)

            # === PAGE 5: Qu·∫£n tr·ªã ng∆∞·ªùi d√πng ===
            elif st.session_state.page == "admin":
                AdminView.show_user_admin(user_controller)

            # === PAGE 6: C√°c chi·∫øn l∆∞·ª£c kh√°c (trend, breakout, scalp, reversal) ===
            else:
                st.header(f"üîç ƒêang ch·∫°y chi·∫øn l∆∞·ª£c: {st.session_state.page}")
                controller.handle_strategy(st.session_state.page, None, None)
            if st.button("üîô Quay l·∫°i Trang ch·ªß", key = "bottom"):
                    MenuView.go_home()
    @staticmethod
    def go_home():
        """Chuy·ªÉn h∆∞·ªõng v·ªÅ trang ch·ªß"""
        st.session_state.page = "home"
        st.rerun()
